openapi: 3.0.0
info:
  description: Вступительное задание в Летнюю Школу Бэкенд Разработки Яндекса 2022
  title: Mega Market Open API
  version: "1.0"
servers:
- url: /
paths:
  /imports:
    post:
      description: |
        Импортирует новые товары и/или категории. Товары/категории импортированные повторно обновляют текущие. Изменение типа элемента с товара на категорию или с категории на товар не допускается. Порядок элементов в запросе является произвольным.

          - uuid товара или категории является уникальным среди товаров и категорий
          - родителем товара или категории может быть только категория
          - принадлежность к категории определяется полем parentId
          - товар или категория могут не иметь родителя (при обновлении parentId на null, элемент остается без родителя)
          - название элемента не может быть null
          - у категорий поле price должно содержать null
          - цена товара не может быть null и должна быть больше либо равна нулю.
          - при обновлении товара/категории обновленными считаются **все** их параметры
          - при обновлении параметров элемента обязательно обновляется поле **date** в соответствии с временем обновления
          - в одном запросе не может быть двух элементов с одинаковым id
          - дата должна обрабатываться согласно ISO 8601 (такой придерживается OpenAPI). Если дата не удовлетворяет данному формату, необходимо отвечать 400.

        Гарантируется, что во входных данных нет циклических зависимостей и поле updateDate монотонно возрастает. Гарантируется, что при проверке передаваемое время кратно секундам.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopUnitImportRequest'
      responses:
        "200":
          description: Вставка или обновление прошли успешно.
        "400":
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
              schema:
                $ref: '#/components/schemas/Error'
          description: Невалидная схема документа или входные данные не верны.
      tags:
      - Базовые задачи
      x-contentType: application/json
      x-accepts: application/json
  /delete/{id}:
    delete:
      description: |
        Удалить элемент по идентификатору. При удалении категории удаляются все дочерние элементы. Доступ к статистике (истории обновлений) удаленного элемента невозможен.

        Так как время удаления не передается, при удалении элемента время обновления родителя изменять не нужно.

        **Обратите, пожалуйста, внимание на этот обработчик. При его некорректной работе тестирование может быть невозможно.**
      parameters:
      - description: Идентификатор
        example: 3fa85f64-5717-4562-b3fc-2c963f66a333
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Удаление прошло успешно.
        "400":
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
              schema:
                $ref: '#/components/schemas/Error'
          description: Невалидная схема документа или входные данные не верны.
        "404":
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                      "code": 404,
                      "message": "Item not found"
                    }
              schema:
                $ref: '#/components/schemas/Error'
          description: Категория/товар не найден.
      tags:
      - Базовые задачи
      x-accepts: application/json
  /nodes/{id}:
    get:
      description: |
        Получить информацию об элементе по идентификатору. При получении информации о категории также предоставляется информация о её дочерних элементах.

        - для пустой категории поле children равно пустому массиву, а для товара равно null
        - цена категории - это средняя цена всех её товаров, включая товары дочерних категорий. Если категория не содержит товаров цена равна null. При обновлении цены товара, средняя цена категории, которая содержит этот товар, тоже обновляется.
      parameters:
      - description: Идентификатор элемента
        example: 3fa85f64-5717-4562-b3fc-2c963f66a333
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopUnit'
          description: Информация об элементе.
        "400":
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
              schema:
                $ref: '#/components/schemas/Error'
          description: Невалидная схема документа или входные данные не верны.
        "404":
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                      "code": 404,
                      "message": "Item not found"
                    }
              schema:
                $ref: '#/components/schemas/Error'
          description: Категория/товар не найден.
      tags:
      - Базовые задачи
      x-accepts: application/json
  /sales:
    get:
      description: |
        Получение списка **товаров**, цена которых была обновлена за последние 24 часа включительно [now() - 24h, now()] от времени переданном в запросе. Обновление цены не означает её изменение. Обновления цен удаленных товаров недоступны. При обновлении цены товара, средняя цена категории, которая содержит этот товар, тоже обновляется.
      parameters:
      - description: Дата и время запроса. Дата должна обрабатываться согласно ISO
          8601 (такой придерживается OpenAPI). Если дата не удовлетворяет данному
          формату, необходимо отвечать 400
        example: 2022-05-28T21:12:01.000Z
        explode: true
        in: query
        name: date
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopUnitStatisticResponse'
          description: Список товаров, цена которых была обновлена.
        "400":
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
              schema:
                $ref: '#/components/schemas/Error'
          description: Невалидная схема документа или входные данные не верны.
      tags:
      - Дополнительные задачи
      x-accepts: application/json
  /node/{id}/statistic:
    get:
      description: |
        Получение статистики (истории обновлений) по товару/категории за заданный полуинтервал [from, to). Статистика по удаленным элементам недоступна.

        - цена категории - это средняя цена всех её товаров, включая товары дочерних категорий.Если категория не содержит товаров цена равна null. При обновлении цены товара, средняя цена категории, которая содержит этот товар, тоже обновляется.
        - можно получить статистику за всё время.
      parameters:
      - description: UUID товара/категории для которой будет отображаться статистика
        example: 3fa85f64-5717-4562-b3fc-2c963f66a333
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Дата и время начала интервала, для которого считается статистика.
          Дата должна обрабатываться согласно ISO 8601 (такой придерживается OpenAPI).
          Если дата не удовлетворяет данному формату, необходимо отвечать 400.
        example: 2022-05-28T21:12:01.000Z
        explode: true
        in: query
        name: dateStart
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Дата и время конца интервала, для которого считается статистика.
          Дата должна обрабатываться согласно ISO 8601 (такой придерживается OpenAPI).
          Если дата не удовлетворяет данному формату, необходимо отвечать 400.
        example: 2022-05-28T21:12:01.000Z
        explode: true
        in: query
        name: dateEnd
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopUnitStatisticResponse'
          description: Статистика по элементу.
        "400":
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
              schema:
                $ref: '#/components/schemas/Error'
          description: Некорректный формат запроса или некорректные даты интервала.
        "404":
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                      "code": 404,
                      "message": "Item not found"
                    }
              schema:
                $ref: '#/components/schemas/Error'
          description: Категория/товар не найден.
      tags:
      - Дополнительные задачи
      x-accepts: application/json
components:
  schemas:
    ShopUnitType:
      description: Тип элемента - категория или товар
      enum:
      - OFFER
      - CATEGORY
      type: string
    ShopUnit:
      example:
        id: 3fa85f64-5717-4562-b3fc-2c963f66a111
        name: Категория
        type: CATEGORY
        parentId: null
        date: 2022-05-28T21:12:01.000Z
        price: 6
        children:
        - name: Оффер 1
          id: 3fa85f64-5717-4562-b3fc-2c963f66a222
          price: 4
          date: 2022-05-28T21:12:01.000Z
          type: OFFER
          parentId: 3fa85f64-5717-4562-b3fc-2c963f66a111
        - name: Подкатегория
          type: CATEGORY
          id: 3fa85f64-5717-4562-b3fc-2c963f66a333
          date: 2022-05-26T21:12:01.000Z
          parentId: 3fa85f64-5717-4562-b3fc-2c963f66a111
          price: 8
          children:
          - name: Оффер 2
            id: 3fa85f64-5717-4562-b3fc-2c963f66a444
            parentId: 3fa85f64-5717-4562-b3fc-2c963f66a333
            date: 2022-05-26T21:12:01.000Z
            price: 8
            type: OFFER
      properties:
        id:
          description: Уникальный идентфикатор
          example: 3fa85f64-5717-4562-b3fc-2c963f66a333
          format: uuid
          nullable: false
          type: string
        name:
          description: Имя категории
          nullable: false
          type: string
        date:
          description: Время последнего обновления элемента.
          example: 2022-05-28T21:12:01Z
          format: date-time
          nullable: false
          type: string
        parentId:
          description: UUID родительской категории
          example: 3fa85f64-5717-4562-b3fc-2c963f66a333
          format: uuid
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/ShopUnitType'
        price:
          description: Целое число, для категории - это средняя цена всех дочерних
            товаров(включая товары подкатегорий). Если цена является не целым числом,
            округляется в меньшую сторону до целого числа. Если категория не содержит
            товаров цена равна null.
          format: int64
          nullable: true
          type: integer
        children:
          description: Список всех дочерних товаров\категорий. Для товаров поле равно
            null.
          items:
            $ref: '#/components/schemas/ShopUnit'
          type: array
      required:
      - date
      - id
      - name
      - type
      type: object
    ShopUnitImport:
      example:
        id: 3fa85f64-5717-4562-b3fc-2c963f66a444
        name: Оффер
        parentId: 3fa85f64-5717-4562-b3fc-2c963f66a333
        price: 234
        type: OFFER
      properties:
        id:
          description: Уникальный идентфикатор
          example: 3fa85f64-5717-4562-b3fc-2c963f66a333
          format: uuid
          nullable: false
          type: string
        name:
          description: Имя элемента.
          nullable: false
          type: string
        parentId:
          description: UUID родительской категории
          example: 3fa85f64-5717-4562-b3fc-2c963f66a333
          format: uuid
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/ShopUnitType'
        price:
          description: Целое число, для категорий поле должно содержать null.
          format: int64
          nullable: true
          type: integer
      required:
      - id
      - name
      - type
      type: object
    ShopUnitImportRequest:
      example:
        updateDate: 2022-05-28T21:12:01Z
        items:
        - id: 3fa85f64-5717-4562-b3fc-2c963f66a444
          name: Оффер
          parentId: 3fa85f64-5717-4562-b3fc-2c963f66a333
          price: 234
          type: OFFER
        - id: 3fa85f64-5717-4562-b3fc-2c963f66a444
          name: Оффер
          parentId: 3fa85f64-5717-4562-b3fc-2c963f66a333
          price: 234
          type: OFFER
      properties:
        items:
          description: Импортируемые элементы
          items:
            $ref: '#/components/schemas/ShopUnitImport'
          nullable: false
          type: array
        updateDate:
          description: Время обновления добавляемых товаров/категорий.
          example: 2022-05-28T21:12:01Z
          format: date-time
          nullable: false
          type: string
      type: object
    ShopUnitStatisticUnit:
      example:
        id: 3fa85f64-5717-4562-b3fc-2c963f66a444
        name: Оффер
        date: 2022-05-28T21:12:01.000Z
        parentId: 3fa85f64-5717-4562-b3fc-2c963f66a333
        price: 234
        type: OFFER
      properties:
        id:
          description: Уникальный идентфикатор
          example: 3fa85f64-5717-4562-b3fc-2c963f66a333
          format: uuid
          nullable: false
          type: string
        name:
          description: Имя элемента
          nullable: false
          type: string
        parentId:
          description: UUID родительской категории
          example: 3fa85f64-5717-4562-b3fc-2c963f66a333
          format: uuid
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/ShopUnitType'
        price:
          description: Целое число, для категории - это средняя цена всех дочерних
            товаров(включая товары подкатегорий). Если цена является не целым числом,
            округляется в меньшую сторону до целого числа. Если категория не содержит
            товаров цена равна null.
          format: int64
          nullable: true
          type: integer
        date:
          description: Время последнего обновления элемента.
          format: date-time
          nullable: false
          type: string
      required:
      - date
      - id
      - name
      - type
      type: object
    ShopUnitStatisticResponse:
      example:
        items:
        - id: 3fa85f64-5717-4562-b3fc-2c963f66a444
          name: Оффер
          date: 2022-05-28T21:12:01.000Z
          parentId: 3fa85f64-5717-4562-b3fc-2c963f66a333
          price: 234
          type: OFFER
        - id: 3fa85f64-5717-4562-b3fc-2c963f66a444
          name: Оффер
          date: 2022-05-28T21:12:01.000Z
          parentId: 3fa85f64-5717-4562-b3fc-2c963f66a333
          price: 234
          type: OFFER
      properties:
        items:
          description: История в произвольном порядке.
          items:
            $ref: '#/components/schemas/ShopUnitStatisticUnit'
          type: array
      type: object
    Error:
      properties:
        code:
          nullable: false
          type: integer
        message:
          nullable: false
          type: string
      required:
      - code
      - message

