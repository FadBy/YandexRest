/*
 * Mega Market Open API
 * Вступительное задание в Летнюю Школу Бэкенд Разработки Яндекса 2022
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.ShopUnitType;
import org.threeten.bp.OffsetDateTime;

/**
 * ShopUnit
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-20T11:40:39.113915+03:00[Europe/Moscow]")
public class ShopUnit {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private OffsetDateTime date;

  public static final String SERIALIZED_NAME_PARENT_ID = "parentId";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private UUID parentId;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private ShopUnitType type;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Long price;

  public static final String SERIALIZED_NAME_CHILDREN = "children";
  @SerializedName(SERIALIZED_NAME_CHILDREN)
  private List<ShopUnit> children = null;


  public ShopUnit id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Уникальный идентфикатор
   * @return id
  **/
  @ApiModelProperty(example = "3fa85f64-5717-4562-b3fc-2c963f66a333", required = true, value = "Уникальный идентфикатор")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public ShopUnit name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Имя категории
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Имя категории")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ShopUnit date(OffsetDateTime date) {
    
    this.date = date;
    return this;
  }

   /**
   * Время последнего обновления элемента.
   * @return date
  **/
  @ApiModelProperty(example = "2022-05-28T21:12:01Z", required = true, value = "Время последнего обновления элемента.")

  public OffsetDateTime getDate() {
    return date;
  }


  public void setDate(OffsetDateTime date) {
    this.date = date;
  }


  public ShopUnit parentId(UUID parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * UUID родительской категории
   * @return parentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3fa85f64-5717-4562-b3fc-2c963f66a333", value = "UUID родительской категории")

  public UUID getParentId() {
    return parentId;
  }


  public void setParentId(UUID parentId) {
    this.parentId = parentId;
  }


  public ShopUnit type(ShopUnitType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")

  public ShopUnitType getType() {
    return type;
  }


  public void setType(ShopUnitType type) {
    this.type = type;
  }


  public ShopUnit price(Long price) {
    
    this.price = price;
    return this;
  }

   /**
   * Целое число, для категории - это средняя цена всех дочерних товаров(включая товары подкатегорий). Если цена является не целым числом, округляется в меньшую сторону до целого числа. Если категория не содержит товаров цена равна null.
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Целое число, для категории - это средняя цена всех дочерних товаров(включая товары подкатегорий). Если цена является не целым числом, округляется в меньшую сторону до целого числа. Если категория не содержит товаров цена равна null.")

  public Long getPrice() {
    return price;
  }


  public void setPrice(Long price) {
    this.price = price;
  }


  public ShopUnit children(List<ShopUnit> children) {
    
    this.children = children;
    return this;
  }

  public ShopUnit addChildrenItem(ShopUnit childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<ShopUnit>();
    }
    this.children.add(childrenItem);
    return this;
  }

   /**
   * Список всех дочерних товаров\\категорий. Для товаров поле равно null.
   * @return children
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Список всех дочерних товаров\\категорий. Для товаров поле равно null.")

  public List<ShopUnit> getChildren() {
    return children;
  }


  public void setChildren(List<ShopUnit> children) {
    this.children = children;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShopUnit shopUnit = (ShopUnit) o;
    return Objects.equals(this.id, shopUnit.id) &&
        Objects.equals(this.name, shopUnit.name) &&
        Objects.equals(this.date, shopUnit.date) &&
        Objects.equals(this.parentId, shopUnit.parentId) &&
        Objects.equals(this.type, shopUnit.type) &&
        Objects.equals(this.price, shopUnit.price) &&
        Objects.equals(this.children, shopUnit.children);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, date, parentId, type, price, children);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShopUnit {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

